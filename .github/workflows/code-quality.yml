name: Code Quality Checks

on:
  workflow_call:
    inputs:
      update-coverage-badge:
        required: false
        default: false
        type: boolean
    secrets:
      codecov_token:
        required: true

env:
  DOCKER_IMAGE_NAME: josafatburmeister/pointtree:latest
  DOCKER_IMAGE_PATH: ~/docker-image-josafatburmeister-pointtree:latest.tar.gz

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout out repository
        uses: actions/checkout@v4
      - name: Setup up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      - name: Analysing the code with black
        shell: bash
        run: |
          python -m pip install black
          black src --check --verbose --diff --color --line-length 120
          black test --check --verbose --diff --color --line-length 120
  mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up potential remnants of past jobs
        uses: AutoModality/action-clean@v1.1.0
      - name: Cache Docker image
        id: cache-docker-image
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ env.DOCKER_IMAGE_NAME }}
      - name: Delete unnecessary folders to free disk space
        if: steps.cache-docker-image.outputs.cache-hit != 'true'
        run: |
          rm -rf /opt/hostedtoolcache
          rm -rf /usr/local/android /usr/share/dotnet /usr/local/share/boost /opt/ghc
      - name: Checkout out repository
        uses: actions/checkout@v4
      - name: Analysing the code with mypy
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.DOCKER_IMAGE_NAME }}
          options: -v ${{ github.workspace }}:/github/workspace
          shell: bash
          run: |
            source /root/venv/bin/activate
            cd /github/workspace/
            python -m pip install --upgrade .'[dev, docs]'
            mypy . --warn-unused-ignores --show-error-codes --no-incremental
  pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up potential remnants of past jobs
        uses: AutoModality/action-clean@v1.1.0
      - name: Cache Docker image
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ env.DOCKER_IMAGE_NAME }}
      - name: Delete unnecessary folders to free disk space
        if: steps.cache-docker-image.outputs.cache-hit != 'true'
        run: |
          rm -rf /opt/hostedtoolcache
          rm -rf /usr/local/android /usr/share/dotnet /usr/local/share/boost /opt/ghc
      - name: Checkout out repository
        uses: actions/checkout@v4
      - name: Analysing the code with pylint
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.DOCKER_IMAGE_NAME }}
          options: -v ${{ github.workspace }}:/github/workspace
          shell: bash
          run: |
            source /root/venv/bin/activate
            cd /github/workspace/
            python -m pip install --upgrade .'[dev, docs]'
            pylint src --rcfile=.rcfile
            pylint test --rcfile=.rcfile --disable duplicate-code --disable missing-function-docstring
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up potential remnants of past jobs
        uses: AutoModality/action-clean@v1.1.0
      - name: Cache Docker image
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ env.DOCKER_IMAGE_NAME }}
      - name: Delete unnecessary folders to free disk space
        if: steps.cache-docker-image.outputs.cache-hit != 'true'
        run: |
          rm -rf /opt/hostedtoolcache
          rm -rf /usr/local/android /usr/share/dotnet /usr/local/share/boost /opt/ghc
      - name: Checkout out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Executing tests
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.DOCKER_IMAGE_NAME }}
          options: -v ${{ github.workspace }}:/github/workspace
          shell: bash
          run: |
            source /root/venv/bin/activate
            cd /github/workspace/
            python -m pip install --upgrade -e .'[dev, docs]'
            pytest --cov --cov-report=xml
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.codecov_token }}
          verbose: true
