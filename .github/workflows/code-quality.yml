name: Code Quality Checks

on:
  workflow_call:
    inputs:
      update-coverage-badge:
        required: false
        default: false
        type: boolean
    secrets:
      codecov_token:
        required: true

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up potential remnants of past jobs
        uses: AutoModality/action-clean@v1.1.0
      - name: Checkout out repository
        uses: actions/checkout@v4
      - name: Setup up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      - name: Analysing the code with black
        shell: bash
        run: |
          python -m pip install black
          black src --check --verbose --diff --color --line-length 120
          black test --check --verbose --diff --color --line-length 120
  mypy:
    runs-on: ubuntu-latest
    container:
      image: josafatburmeister/pointtree:latest
      volumes:
        - ${{ github.workspace }}:/github/workspace
    steps:
      - name: Clean up potential remnants of past jobs
        uses: AutoModality/action-clean@v1.1.0
      - name: Checkout out repository
        uses: actions/checkout@v4
      - name: Analysing the code with mypy
        shell: bash
        run: |
          cd /github/workspace/
          python -m pip install --upgrade .'[dev, docs]'
          mypy . --warn-unused-ignores --show-error-codes --no-incremental
  pylint:
    runs-on: ubuntu-latest
    container:
      image: josafatburmeister/pointtree:latest
      volumes:
        - ${{ github.workspace }}:/github/workspace
    steps:
      - name: Clean up potential remnants of past jobs
        uses: AutoModality/action-clean@v1.1.0
      - name: Checkout out repository
        uses: actions/checkout@v4
      - name: Analysing the code with pylint
        shell: bash
        run: |
          cd /github/workspace/
          python -m pip install --upgrade .'[dev, docs]'
          pylint src --rcfile=.rcfile
          pylint test --rcfile=.rcfile --disable duplicate-code --disable missing-function-docstring
  test:
    runs-on: ubuntu-latest
    # run tests for all supported Python and PyTorch versions
    strategy:
      matrix:
        version: [
          {python: "3.10", torch: "2.1.0"},
          {python: "3.11", torch: "2.2.0"},
          {python: "3.12", torch: "2.3.0"},
          {python: "3.12", torch: "2.4.0"},
          {python: "3.13", torch: "2.5.0"}
        ]
    steps:
      - name: Clean up potential remnants of past jobs
        uses: AutoModality/action-clean@v1.1.0
      - name: Checkout out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Setup up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.version.python }}
      - name: Install package and dependencies
        shell: bash
        run: |
          python -m pip install torch==${{ matrix.version.torch }}
          python -m pip install wheel setuptools numpy
          python -m pip install torch-scatter -f https://data.pyg.org/whl/torch-${{ matrix.version.torch }}+cpu.html
          python -m pip install torch-cluster -f https://data.pyg.org/whl/torch-${{ matrix.version.torch }}+cpu.html
          python -m pip install --upgrade -e .'[dev, docs]'
      - name: Executing tests
        shell: bash
        run: |
          pytest --cov --cov-report=xml
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.codecov_token }}
          verbose: true
