# This workflow deploys the package documentation on GitHub Pages when a new package release is published
name: Deploy documentation

on:
  release:
    types: [published]

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: deploy-docs
  cancel-in-progress: false

jobs:
  if: github.repository == 'ai4trees/pointtree'

  deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    container:
      image: justushildebrand/python-cuda:3.9-cuda11.8
      volumes:
        - ${{ github.workspace }}:/github/workspace
    steps:
      - name: Clean up potential remnants of past jobs
        uses: AutoModality/action-clean@v1.1.0
      - name: Checkout out repository at workflow sha
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0
      - name: Force correct branch on workflow sha
        run: |
          git checkout -B ${{ github.head_ref }} ${{ github.sha }}
      - name: Build sphinx documentation
        shell: bash
        run: |
          source /root/venv/bin/activate
          cd /github/workspace/
          python -m pip install --upgrade .'[dev, docs]'
          cd docs
          rm -rf build
          make clean
          make html
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './docs/build/html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
